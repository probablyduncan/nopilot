---
import FaviconWrapper from "../components/favicon-wrapper.astro";
import ModelSelect from "../components/model-select.astro";
import SuggestedPromps from "../components/suggested-promps.astro";

// export const prerender = false

// if (Astro.request.method === "POST") {
//   try {
//     const data = await Astro.request.formData();
//     const query = data.get("query");
// 	console.log(query);
//   } catch (error) {
//     if (error instanceof Error) {
//       console.error(error.message);
//     }
//   }
// }
---

<html lang="en">
	<head>
		<!-- <FaviconWrapper /> -->

		<link
			rel="icon"
			href={`
        data:image/svg+xml,
        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'>
            <text y='.9em' font-size='90'>üßë‚Äç‚úàÔ∏è</text>
        </svg>`}
		/>

		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<title>nopilot</title>
		<script src="../lib/client/üìú.ts"></script>
	</head>
	<body>
		<header>
			<nav>
				<div>
					<a href="/" title="nopilot: degenerative ai">nopilot</a>
				</div>
				<div>
					<a href="/colophon">about</a>
				</div>
			</nav>
		</header>
		<main>
			<div class="start-content">
				<header>
					<h1>Hey there. What can I help you with?</h1>
					<p>
						<strike>de</strike>generative ai - blazingly
						fast&nbsp;&nbsp;
					</p>
				</header>
				<div class="input-wrapper">
					<form class="input-form" autocomplete="off">
						<textarea
							name="ü§Æ"
							placeholder="How can I help you?"
							autofocus="true"></textarea>
						<div>
							<ModelSelect name="ü¶†" server:defer>
								<select slot="fallback">
									<option>so many models...</option>
								</select>
							</ModelSelect>
							<button type="submit">Submit</button>
						</div>
					</form>
				</div>
				<SuggestedPromps />
			</div>
			<div class="response-wrapper" hidden>
				<div class="prompt"></div>
				<div class="response"></div>
				<br />
				<div><button data-reset>Back</button></div>
			</div>
		</main>
	</body>
</html>
<script>
	import { submitQuery, toggleView } from "../lib/client/üìú";
	document.querySelectorAll("form.input-form").forEach((_e) => {
		const form = _e as HTMLFormElement;

		form.addEventListener("submit", async (e) => {
			e.preventDefault();
			await submitQuery(new FormData(form));
			form.reset();
			(form.children[0] as HTMLElement).focus();
		});

		form.addEventListener("click", (e) => {
			if (
				e.target === form ||
				(e.target as HTMLElement).tagName.toLowerCase() === "DIV"
			) {
				(form.children[0] as HTMLElement).focus();
			}
		});

		form.addEventListener("keypress", (e) => {
			if (!e.shiftKey && e.key === "Enter") {
				e.preventDefault();
				form.requestSubmit();
			}
		});
	});

	document.querySelectorAll("button[data-reset]").forEach((_e) => {
		_e.addEventListener("click", () => {
			toggleView(false);
		});
	});
</script>
<style>
	:root {
		color-scheme: light dark;
		--bg-color: light-dark(white, black);
		--text-color: light-dark(black, white);
		--content-width: min(65ch, 100%);
	}

	html {
		width: 100%;
		height: 100%;
		color: var(--text-color);

		background-color: var(--bg-color);

		background-image: light-dark(
			url(../components/gradient-light.svg),
			url(../components/gradient-dark.svg)
		);
		background-position: 50% 50%;
		background-size: cover;

		font-family:
			system-ui,
			-apple-system,
			BlinkMacSystemFont,
			"Segoe UI",
			Roboto,
			Oxygen,
			Ubuntu,
			Cantarell,
			"Open Sans",
			"Helvetica Neue",
			sans-serif;
	}

	html,
	body {
		margin: 0;
	}

	* {
		box-sizing: border-box;
	}

	nav {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		border-bottom: 1px solid #888;
		padding: 10px;
		display: flex;
		justify-content: space-between;
		background-color: var(--bg-color);
	}

	a {
		color: unset;
		text-decoration: underline;
		text-decoration-color: transparent;
		transition:
			color 0.1s,
			text-decoration-color 0.1s;

		&:hover {
			color: #888;
			text-decoration-color: #888;
		}
	}

	main {
		display: flex;
		flex-flow: column nowrap;
		align-items: center;
		width: 100%;
		height: 100svh;
		box-sizing: border-box;
		padding: 60px 20px 20px;
	}

	.content-scroll-container {
		flex-basis: content;
		flex-grow: 1;

		display: flex;
		flex-direction: column-reverse;
		justify-content: flex-end;
		align-items: center;
		overflow-y: scroll;
	}

	.response-wrapper {
		width: var(--content-width);
		padding-bottom: 20vh;
	}

	.start-content {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		gap: 4rem;
		width: 100%;
		min-height: 100%;

		header {
			text-align: center;

			p {
				opacity: 0.6;
				font-style: italic;
				strike {
					opacity: 0.4;
					text-decoration: unset;
				}
			}
		}
	}

	[hidden] {
		display: none;
	}

	.input-wrapper {
		width: 100%;
		display: flex;
		justify-content: center;
	}

	.input-form {
		width: var(--content-width);
		padding: 20px;
		border: 1px solid #888;
		border-radius: 20px;
		cursor: text;

		& > textarea {
			width: 100%;
			resize: none;
			border: unset;
			outline: none;
			background-color: unset;
		}

		& > div {
			display: flex;
			justify-content: space-between;

			button {
				cursor: pointer;
			}
		}
	}
</style>
